&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// <!-- PushA
	// фрагмент УДАЛЕН:
	//Если Не ирОбщий.ПроверитьЧтоСеансТолстогоКлиентаЛкс() Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли; 
	// PushA -->
	Если ирКэш.НомерВерсииБСПЛкс() >= 204 Тогда
		Если Не ирКэш.ЛиЭтоРасширениеКонфигурацииЛкс() Тогда
			ирОбщий.СообщитьЛкс("Работа инструмента с БСП 2.4 и выше поддерживается только в варианте Расширение");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
		Если Метаданные.ОбщиеМодули.Найти("ДополнительныеОтчетыИОбработки") = Неопределено Тогда
			ирОбщий.СообщитьЛкс("Подсистема БСП внедрена без блока дополнительных отчетов и обработок");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
		Элементы.ПерехватВнешнихОбработок.Видимость = Ложь;
	    _ДополнительныеОтчетыИОбработки = Вычислить("ДополнительныеОтчетыИОбработки");
			#Если Сервер И Не Сервер Тогда
			    _ДополнительныеОтчетыИОбработки = ДополнительныеОтчетыИОбработки;
			#КонецЕсли
		Попытка
			_ДополнительныеОтчетыИОбработки.ирПроверкаПодключенияРасширенияМодуля();
		Исключение
			ирОбщий.СообщитьЛкс("Необходимо адаптировать расширение командой ""Адаптация расширения"" в разделе ""Инструменты разработчика""/""Администрирование""");
			Отказ = Истина;
			Возврат;
		КонецПопытки; 
	ИначеЕсли ирКэш.НомерВерсииБСПЛкс() < 200 Тогда
		ирОбщий.СообщитьЛкс("Поддерживаются версии БСП 2.0 и выше. Обнаружена БСП """ + ирКэш.ВерсияБСПЛкс() + """");
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	Элементы.НадписьНеРаботаютТочкиОстанова.Видимость = ирКэш.НомерВерсииПлатформыЛкс() = 803006;
	ПрочитатьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда = Неопределено)
	
	КлючСтроки = ирОбщий.ТабличноеПолеКлючСтрокиЛкс(Элементы.Список);
	ОбновитьСписокНаСервере();
	// <!-- PushA
	// фрагмент ИЗМЕНЕН:
	//ирОбщий.ТабличноеПолеВосстановитьТекущуюСтрокуЛкс(Элементы.Список, КлючСтроки, Список);
	ТабличноеПолеВосстановитьТекущуюСтрокуЛксНаСервере(КлючСтроки);
	// PushA -->
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВОтладчике(Команда)
	
	// <!-- PushA
	// фрагмент УДАЛЕН:
	//Если Не ирКэш.ЭтоТолстыйКлиентЛкс() Тогда 
	//	Сообщить("Функция доступна только в толстом клиенте");
	//	Возврат;
	//КонецЕсли;  
	// PushA -->
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ПолноеИмяФайла = ирСервер.ПолноеИмяФайлаВнешнейОбработкиВФайловомКэшеЛкс(ТекущиеДанные.Ссылка, КаталогФайловогоКэша);
	// <!-- PushA
	// фрагмент УДАЛЕН:
	#Если ТонкийКлиент Тогда 
		ОбновитьФайлОбработки(ТекущиеДанные.Ссылка, ПолноеИмяФайла);
		ФайлВнешнейОбработки = Новый Файл(ПолноеИмяФайла);
		Если ФайлВнешнейОбработки.Существует() Тогда
			WshShell = Новый COMОбъект("WScript.Shell");
			WshShell.Run("""" + ПолучитьФайлОткрывателя1С(КаталогФайловогоКэша) + """ -com -ob1""" + ПолноеИмяФайла + """", 0, Ложь);
		КонецЕсли;
	#Иначе 
	// PushA -->
	Файл = Новый Файл(ПолноеИмяФайла);
	Если Не Файл.Существует() Тогда
		ТекущиеДанные.Ссылка.ХранилищеОбработки.Получить().Записать(ПолноеИмяФайла);
	КонецЕсли; 
	ирКэш.Получить().ОткрытьФайлВКонфигураторе(ПолноеИмяФайла, "Модуль");
	#КонецЕсли
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешниеОбработкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// <!-- PushA
	// фрагмент ИЗМЕНЕН:
	//ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
	// PushA -->
	
КонецПроцедуры

#Область PushA

&НаСервере
Процедура ТабличноеПолеВосстановитьТекущуюСтрокуЛксНаСервере(КлючСтроки)
	ирОбщий.ТабличноеПолеВосстановитьТекущуюСтрокуЛкс(Элементы.Список, КлючСтроки, Список);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьФайлОбработки(Ссылка, ИмяФайла)

	ФайлОбработки = Новый Файл(ИмяФайла);
	Если Не ФайлОбработки.Существует() Тогда
		Ссылка.ХранилищеОбработки.Получить().Записать(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФайлОткрывателя1С(КаталогФайловогоКэша)
	
	ФайлОткрывателя1С = Новый Файл(КаталогФайловогоКэша + "\OpenIn1Cv8.exe");
	ирПлатформа = Обработки.ирПлатформа.Создать();
	ирПлатформа.ПолучитьМакет("OpenIn1Cv8").Записать(ФайлОткрывателя1С.ПолноеИмя);
	Возврат ФайлОткрывателя1С.ПолноеИмя;

КонецФункции

#КонецОбласти
